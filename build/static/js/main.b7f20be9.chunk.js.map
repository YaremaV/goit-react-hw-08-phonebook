{"version":3,"sources":["components/Form/form.module.css","components/Filter/filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","components/Contactslist/Contactslist.js","components/Form/Form.js","components/Filter/Filter.js","components/Container/Container.js","components/Layout/Layout.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContacts","items","createReducer","_","payload","state","action","filter","contact","id","loading","combineReducers","rootReducer","contacts","contactsReducer","store","configureStore","reducer","devTools","process","axios","defaults","baseURL","name","number","dispatch","post","then","data","catch","error","contactsId","delete","a","get","getFilter","getFilteredContacts","createSelector","filterCase","toLowerCase","includes","connect","contactsListSelector","fetchContacts","contactsOperation","onDeleteContacts","className","map","type","onClick","onSubmit","contactsOperations","useState","setName","setNumber","handleChange","evt","target","value","reset","s","form","preventDefault","onChange","pattern","title","required","filterSelector","onHandleFilter","event","Container","children","Layout","App","useDispatch","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7f20be9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1BI77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1iQzj\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\nexport const filterContacts = createAction('contacts/filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  filterContacts,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactsSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store };\r\n// console.log(process.env.NODE_ENV);\r\n","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContacts = (name, number) => dispatch => {\r\n  const contacts = { name, number };\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', contacts)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst deleteContacts = contactsId => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactsId}`)\r\n    .then(() => dispatch(deleteContactsSuccess(contactsId)))\r\n    .catch(error => dispatch(deleteContactsError(error)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  addContacts,\r\n  deleteContacts,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   const filterCase = filter.toLowerCase();\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filterCase),\r\n//   );\r\n// };\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterCase = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filterCase),\r\n    );\r\n  },\r\n);\r\n\r\nexport default { getFilter, getFilteredContacts };\r\n","import { connect } from 'react-redux';\nimport contactsOperation from '../../redux/contacts/contacts-operations';\nimport './contactlist.css';\nimport contactsListSelector from '../../redux/contacts/contacts-selector';\n\nfunction ContactsList({ contacts, onDeleteContacts }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsListSelector.getFilteredContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\n  onDeleteContacts: id => dispatch(contactsOperation.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport s from './form.module.css';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2>Phonebook</h2>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './filter.module.css';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport filterSelector from '../../redux/contacts/contacts-selector';\n\nfunction Filter({ value, onHandleFilter }) {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.filter}>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onHandleFilter} />\n      </label>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: filterSelector.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleFilter: event => dispatch(filterContacts(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport Container from '../Container/Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nexport default Layout;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport contactsOperation from './redux/contacts/contacts-operations';\nimport ContactsList from './components/Contactslist/Contactslist';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport Layout from './components/Layout/Layout';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(contactsOperation.fetchContacts())[dispatch]);\n\n  return (\n    <Layout>\n      <Form />\n      <Filter />\n      <ContactsList />\n    </Layout>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\n// });\n\n// export default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}