{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Filter/filter.module.css","components/Form/form.module.css","components/Contactslist/Contactslist.js","components/Filter/Filter.js","components/Form/Form.js","views/Contacts/Contacts.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","connect","state","contacts","contactsListSelector","getFilteredContacts","dispatch","fetchContacts","contactsOperation","onDeleteContacts","id","deleteContacts","className","map","name","number","type","onClick","filterSelector","getFilter","onHandleFilter","event","filterContacts","target","s","filter","onChange","onSubmit","contactsOperations","addContacts","useState","setName","setNumber","handleChange","evt","reset","form","preventDefault","pattern","title","required","Contacts","useDispatch","useEffect"],"mappings":"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","file":"static/js/3.f5889cae.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__1iQzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1BI77\"};","import { connect } from 'react-redux';\nimport contactsOperation from '../../redux/contacts/contacts-operations';\nimport './contactlist.css';\nimport contactsListSelector from '../../redux/contacts/contacts-selector';\n\nfunction ContactsList({ contacts, onDeleteContacts }) {\n  return (\n    <ul className=\"contacts\">\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsListSelector.getFilteredContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\n  onDeleteContacts: id => dispatch(contactsOperation.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './filter.module.css';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport filterSelector from '../../redux/contacts/contacts-selector';\n\nfunction Filter({ value, onHandleFilter }) {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <label className={s.filter}>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onHandleFilter} />\n      </label>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: filterSelector.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleFilter: event => dispatch(filterContacts(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport s from './form.module.css';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <h2>Phonebook</h2>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContacts(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport ContactsList from '../../components/Contactslist/Contactslist';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport Form from '../../components/Form/Form';\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts())[dispatch]);\r\n  return (\r\n    <>\r\n      <Form />\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}